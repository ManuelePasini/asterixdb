distribute result [$$20] [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    assign [$$20] <- [{"res": $$25}] project: [$$20] [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
    -- ASSIGN  |PARTITIONED|
      exchange [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
        order (ASC, $$25) [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
        -- STABLE_SORT [$$25(ASC)]  |PARTITIONED|
          exchange [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
          -- RANGE_PARTITION_EXCHANGE [$$25(ASC)]  |PARTITIONED|
            forward: shared-variable = $$29 [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
            -- FORWARD  |PARTITIONED|
              exchange [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                replicate [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
                -- REPLICATE  |PARTITIONED|
                  exchange [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    select (and(gt($$t.getField("c_i8"), 2), lt($$t.getField("c_i64"), 3))) project: [$$25] [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
                    -- STREAM_SELECT  |PARTITIONED|
                      assign [$$25] <- [$$t.getField("c_x")] [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
                      -- ASSIGN  |PARTITIONED|
                        project ([$$t]) [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
                        -- STREAM_PROJECT  |PARTITIONED|
                          exchange [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                            data-scan []<-[$$22, $$t] <- test.TestOpen [cardinality: 1000000.0, op-cost: 1000000.0, total-cost: 1000000.0]
                            -- DATASOURCE_SCAN  |PARTITIONED|
                              exchange
                              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                empty-tuple-source
                                -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
              exchange
              -- BROADCAST_EXCHANGE  |PARTITIONED|
                aggregate [$$29] <- [agg-range-map($$27, $$28)]
                -- AGGREGATE  |UNPARTITIONED|
                  exchange
                  -- RANDOM_MERGE_EXCHANGE  |PARTITIONED|
                    aggregate [$$27, $$28] <- [agg-local-sampling($$25), agg-null-writer($$25)]
                    -- AGGREGATE  |PARTITIONED|
                      exchange
                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                        replicate [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
                        -- REPLICATE  |PARTITIONED|
                          exchange [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                            select (and(gt($$t.getField("c_i8"), 2), lt($$t.getField("c_i64"), 3))) project: [$$25] [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
                            -- STREAM_SELECT  |PARTITIONED|
                              assign [$$25] <- [$$t.getField("c_x")] [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
                              -- ASSIGN  |PARTITIONED|
                                project ([$$t]) [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
                                -- STREAM_PROJECT  |PARTITIONED|
                                  exchange [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
                                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                    data-scan []<-[$$22, $$t] <- test.TestOpen [cardinality: 1000000.0, op-cost: 1000000.0, total-cost: 1000000.0]
                                    -- DATASOURCE_SCAN  |PARTITIONED|
                                      exchange
                                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                        empty-tuple-source
                                        -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
