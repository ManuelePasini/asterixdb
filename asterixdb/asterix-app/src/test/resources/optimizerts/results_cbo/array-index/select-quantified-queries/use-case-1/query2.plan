distribute result [$$50] [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
-- DISTRIBUTE_RESULT  |UNPARTITIONED|
  exchange [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
  -- ONE_TO_ONE_EXCHANGE  |UNPARTITIONED|
    assign [$$50] <- [{"$1": $$52}] project: [$$50] [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
    -- ASSIGN  |UNPARTITIONED|
      aggregate [$$52] <- [agg-sql-sum($$54)] [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
      -- AGGREGATE  |UNPARTITIONED|
        exchange [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
        -- RANDOM_MERGE_EXCHANGE  |PARTITIONED|
          aggregate [$$54] <- [agg-sql-count(1)] [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
          -- AGGREGATE  |PARTITIONED|
            select ($$43) [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
            -- STREAM_SELECT  |PARTITIONED|
              project ([$$43]) [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
              -- STREAM_PROJECT  |PARTITIONED|
                subplan {
                          aggregate [$$43] <- [non-empty-stream()]
                          -- AGGREGATE  |LOCAL|
                            select (and(gt($$D, "2016"), lt($$D, "2017")))
                            -- STREAM_SELECT  |LOCAL|
                              unnest $$D <- scan-collection($$53)
                              -- UNNEST  |LOCAL|
                                nested tuple source
                                -- NESTED_TUPLE_SOURCE  |LOCAL|
                       } [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
                -- SUBPLAN  |PARTITIONED|
                  assign [$$53] <- [$$C.getField(2)] project: [$$53] [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
                  -- ASSIGN  |PARTITIONED|
                    project ([$$C]) [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
                    -- STREAM_PROJECT  |PARTITIONED|
                      exchange [cardinality: 1000000.0, op-cost: 0.0, total-cost: 1000000.0]
                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                        data-scan []<-[$$51, $$C] <- TestYelp.YelpCheckin [cardinality: 1000000.0, op-cost: 1000000.0, total-cost: 1000000.0]
                        -- DATASOURCE_SCAN  |PARTITIONED|
                          exchange
                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                            empty-tuple-source
                            -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
