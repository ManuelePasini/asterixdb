distribute result [$$47]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    assign [$$47] <- [{"gid": $$gid, "stddev": $$50}] project: [$$47]
    -- ASSIGN  |PARTITIONED|
      exchange
      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
        group by ([$$gid := $$53]) decor ([]) {
                  aggregate [$$50] <- [global-sql-stddev-serial_samp($$52)]
                  -- AGGREGATE  |LOCAL|
                    nested tuple source
                    -- NESTED_TUPLE_SOURCE  |LOCAL|
               }
        -- EXTERNAL_GROUP_BY[$$53]  |PARTITIONED|
          exchange
          -- HASH_PARTITION_EXCHANGE [$$53]  |PARTITIONED|
            group by ([$$53 := $$48]) decor ([]) {
                      aggregate [$$52] <- [local-sql-stddev-serial_samp($$45)]
                      -- AGGREGATE  |LOCAL|
                        nested tuple source
                        -- NESTED_TUPLE_SOURCE  |LOCAL|
                   }
            -- EXTERNAL_GROUP_BY[$$48]  |PARTITIONED|
              exchange
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                assign [$$45, $$48] <- [$$t.getField(2), $$t.getField(1)] project: [$$45, $$48]
                -- ASSIGN  |PARTITIONED|
                  project ([$$t])
                  -- STREAM_PROJECT  |PARTITIONED|
                    exchange
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      data-scan []<-[$$49, $$t] <- test.Test
                      -- DATASOURCE_SCAN  |PARTITIONED|
                        exchange
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          empty-tuple-source
                          -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
