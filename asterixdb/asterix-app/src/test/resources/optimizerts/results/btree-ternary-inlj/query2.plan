distribute result [$$65]
-- DISTRIBUTE_RESULT  |UNPARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |UNPARTITIONED|
    assign [$$65] <- [{"$1": $$71}] project: [$$65]
    -- ASSIGN  |UNPARTITIONED|
      aggregate [$$71] <- [agg-sql-sum($$73)]
      -- AGGREGATE  |UNPARTITIONED|
        exchange
        -- RANDOM_MERGE_EXCHANGE  |PARTITIONED|
          aggregate [$$73] <- [agg-sql-count(1)]
          -- AGGREGATE  |PARTITIONED|
            select (eq($$66, $$B.getField("k")))
            -- STREAM_SELECT  |PARTITIONED|
              project ([$$66, $$B])
              -- STREAM_PROJECT  |PARTITIONED|
                exchange
                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                  unnest-map [$$69, $$B] <- index-search("IndexDatasetB", 0, "Default", "TestDataverse", "IndexDatasetB", true, false, 1, $$77, 1, $$77, true, true, true)
                  -- BTREE_SEARCH  |PARTITIONED|
                    exchange
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      order (ASC, $$77)
                      -- STABLE_SORT [$$77(ASC)]  |PARTITIONED|
                        exchange
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          project ([$$66, $$77])
                          -- STREAM_PROJECT  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              unnest-map [$$76, $$77] <- index-search("indexB", 0, "Default", "TestDataverse", "IndexDatasetB", true, true, 1, $$66, 1, $$66, true, true, true)
                              -- BTREE_SEARCH  |PARTITIONED|
                                exchange
                                -- BROADCAST_EXCHANGE  |PARTITIONED|
                                  select (eq($$66, $$A.getField("k"))) project: [$$66]
                                  -- STREAM_SELECT  |PARTITIONED|
                                    project ([$$66, $$A])
                                    -- STREAM_PROJECT  |PARTITIONED|
                                      exchange
                                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                        unnest-map [$$68, $$A] <- index-search("IndexDatasetA", 0, "Default", "TestDataverse", "IndexDatasetA", true, false, 1, $$75, 1, $$75, true, true, true)
                                        -- BTREE_SEARCH  |PARTITIONED|
                                          exchange
                                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                            order (ASC, $$75)
                                            -- STABLE_SORT [$$75(ASC)]  |PARTITIONED|
                                              exchange
                                              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                project ([$$66, $$75])
                                                -- STREAM_PROJECT  |PARTITIONED|
                                                  exchange
                                                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                    unnest-map [$$74, $$75] <- index-search("indexA", 0, "Default", "TestDataverse", "IndexDatasetA", true, true, 1, $$66, 1, $$66, true, true, true)
                                                    -- BTREE_SEARCH  |PARTITIONED|
                                                      exchange
                                                      -- BROADCAST_EXCHANGE  |PARTITIONED|
                                                        assign [$$66] <- [$$P.getField(1)] project: [$$66]
                                                        -- ASSIGN  |PARTITIONED|
                                                          project ([$$P])
                                                          -- STREAM_PROJECT  |PARTITIONED|
                                                            exchange
                                                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                              data-scan []<-[$$67, $$P] <- TestDataverse.ProbeDataset
                                                              -- DATASOURCE_SCAN  |PARTITIONED|
                                                                exchange
                                                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                                  empty-tuple-source
                                                                  -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
