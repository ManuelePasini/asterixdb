distribute result [$$21]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    order (ASC, $$21)
    -- STABLE_SORT [$$21(ASC)]  |PARTITIONED|
      exchange
      -- RANGE_PARTITION_EXCHANGE [$$21(ASC)]  |PARTITIONED|
        forward: shared-variable = $$26
        -- FORWARD  |PARTITIONED|
          exchange
          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
            replicate
            -- REPLICATE  |PARTITIONED|
              exchange
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                project ([$$21])
                -- STREAM_PROJECT  |PARTITIONED|
                  exchange
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    join (eq($$22, $$16))
                    -- HYBRID_HASH_JOIN [$$16][$$22]  |PARTITIONED|
                      exchange
                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                        assign [$$16] <- [$$c.getField(1)] project: [$$21, $$16]
                        -- ASSIGN  |PARTITIONED|
                          exchange
                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                            data-scan []<-[$$21, $$c] <- tpch.Customer
                            -- DATASOURCE_SCAN  |PARTITIONED|
                              exchange
                              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                empty-tuple-source
                                -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                      exchange
                      -- BROADCAST_EXCHANGE  |PARTITIONED|
                        unnest $$22 <- scan-collection(array: [ "Customer#000000003", "Customer#000000002", "Customer#000000001" ])
                        -- UNNEST  |UNPARTITIONED|
                          empty-tuple-source
                          -- EMPTY_TUPLE_SOURCE  |UNPARTITIONED|
          exchange
          -- BROADCAST_EXCHANGE  |PARTITIONED|
            aggregate [$$26] <- [agg-range-map($$24, $$25)]
            -- AGGREGATE  |UNPARTITIONED|
              exchange
              -- RANDOM_MERGE_EXCHANGE  |PARTITIONED|
                aggregate [$$24, $$25] <- [agg-local-sampling($$21), agg-null-writer($$21)]
                -- AGGREGATE  |PARTITIONED|
                  exchange
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    replicate
                    -- REPLICATE  |PARTITIONED|
                      exchange
                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                        project ([$$21])
                        -- STREAM_PROJECT  |PARTITIONED|
                          exchange
                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                            join (eq($$22, $$16))
                            -- HYBRID_HASH_JOIN [$$16][$$22]  |PARTITIONED|
                              exchange
                              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                assign [$$16] <- [$$c.getField(1)] project: [$$21, $$16]
                                -- ASSIGN  |PARTITIONED|
                                  exchange
                                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                    data-scan []<-[$$21, $$c] <- tpch.Customer
                                    -- DATASOURCE_SCAN  |PARTITIONED|
                                      exchange
                                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                        empty-tuple-source
                                        -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                              exchange
                              -- BROADCAST_EXCHANGE  |PARTITIONED|
                                unnest $$22 <- scan-collection(array: [ "Customer#000000003", "Customer#000000002", "Customer#000000001" ])
                                -- UNNEST  |UNPARTITIONED|
                                  empty-tuple-source
                                  -- EMPTY_TUPLE_SOURCE  |UNPARTITIONED|
